import { runMiddleware } from '@/util/cors'
import { NextApiRequest, NextApiResponse } from 'next'
import { getSession, withApiAuthRequired } from '@auth0/nextjs-auth0'
import { update } from '@/lib/review/review'

interface IBody {
	id: number
	landlord: string
	country_code: string
	city: string
	state: string
	zip: string
	review: string
	repair: number
	health: number
	stability: number
	privacy: number
	respect: number
	date_added: Date // auto-generated by db
	flagged: boolean
	flagged_reason: string
	admin_approved: boolean | null
	admin_edited: boolean
	rent: number | null
	moderation_reason: string | null
}

const EditReview = async (req: NextApiRequest, res: NextApiResponse) => {
	const session = await getSession(req, res)
	const user = session?.user
	await runMiddleware(req, res)

	// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
	const { body }: { body: IBody } = req

	const id = body.id

	if (user && user.role === 'ADMIN') {
		const reviews = await update(id, body)
		res.status(200).json(reviews)
	} else {
		res.status(401).json({ error: 'UNAUTHORIZED' })
	}
}

export default withApiAuthRequired(EditReview)
